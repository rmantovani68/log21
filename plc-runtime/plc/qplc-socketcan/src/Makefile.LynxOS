#
# @(#) Makefile per Lynx di qplc Mon Jan 22 11:30:40 MET 2001
# @(#) Rif. Guerrini
#

#
# LynxOS
#

DEVCNI=/usr/local/cni
DEVCNI_3=/usr/local/cni-3
DEFS=.
LOCAL_LIB=LIB_TEMP
LOCAL_LIB_3=LIB_TEMP
LOCAL_INCL=LIB_TEMP

SHELL=/bin/bash
CC=gcc
CFLAGS=-O \
       -Wall -Wtraditional -Wshadow -Wpointer-arith -Wcast-qual \
       -Wcast-align -Wwrite-strings -Wconversion -Waggregate-return \
       -Wstrict-prototypes -Wmissing-prototypes -Wredundant-decls \
       -Wnested-externs \
       -g \
       -mposix -D_POSIX_SOURCE -mthreads -DLynx \
       -I$(LOCAL_INCL) -I$(DEFS) -I$(DEVCNI)/include
LD=gcc
LD_R=ld -r
#
# TEMPORANEAMENTE
#
LDFLAGS=-mposix -D_POSIX_SOURCE -mthreads \
        -L. -L$(LOCAL_LIB) -L$(DEVCNI)/lib \
        -Xlinker -Ttext -Xlinker 0x10000
LDFLAGS_3=-mposix -D_POSIX_SOURCE -mthreads \
        -L. -L$(LOCAL_LIB_3) -L$(DEVCNI_3)/lib \
        -Xlinker -Ttext -Xlinker 0x10000
LDFLAGS_MAP=$(LDFLAGS) -Xlinker -Map -Xlinker qplc.map
LDRFLAGS=-L. -L$(DEVCNI)/lib
LIBS=-lserax -l_serverdm -lsock -ldevcni -lxerr -lbsd
AR=ar
ARFLAGS=qv
RANLIB=ranlib

VERLIB=$(DEVCNI)/VERSIONE
VERLIB_3=$(DEVCNI_3)/VERSIONE

.c.o:
	$(CC) -c $(CFLAGS) $<


#DEBUG_SRC=dummy.c
#DEBUG_OBJS=dummy.o
DEBUG_SRC=
DEBUG_OBJS=

SOURCES=\
	$(DEBUG_SRC) \
	main.c \
	util.c \
	util2.s \
	modules.c \
	dynaload.c \
	lista-LynxOS.s \
	dummy_prog480.c \
	dummy_hatsh.c \
	plc480.c \
	compat.c \
	drivers.c \
	dr_ios.c \
	dr_keyb.c \
	dr_ax.c \
	dr_ser.c \
	dr_bgage.c \
	shvar.c \
	exec.c \
	superv.c \
	ilcrtm.c \
	glue.c \
	sysv.c \
	posix.c \
	debugger.c \
	remote.c \
	cback.c \
	ioconf.c \
	hsort.c \
	debhook.s
#	dummy_serverdm.s

HEADERS=\
	qplc.h \
	util.h \
	modules.h \
	dynaload.h \
	drivers.h \
	dr_ios.h \
	shvar.h \
	compat.h \
	exec.h \
	superv.h \
	glue.h \
	cback.h \
	debugger.h \
	plcrem.h \
	ioconf.h \
	remote.h

OBJS=\
	$(DEBUG_OBJS) \
	main.o \
	util.o \
	util2.o \
	modules.o \
	dynaload.o \
	lista-LynxOS.o \
	compat.o \
	drivers.o \
	dr_ios.o \
	dr_keyb.o \
	dr_ax.o \
	dr_ser.o \
	dr_bgage.o \
	shvar.o \
	exec.o \
	superv.o \
	ilcrtm.o \
	glue.o \
	sysv.o \
	posix.o \
	debugger.o \
	remote.o \
	cback.o \
	ioconf.o \
	hsort.o \
	debhook.o
#	dummy_serverdm.o

OBJS2= \
	dummy_prog480.o \
	dummy_hatsh.o \
	plc480.o \
	ver_core.o

OBJS3= \
	dummy_prog480.o

#all::	qplc qplc-3 plc480mix.o
all::	qplc plc480mix.o

release::
	rm -f qplc libqplc.a
	$(MAKE) RELEASE=1

#qplc:	qplc-4
#	rm -f qplc
#	ln -s qplc-4 qplc

#qplc-4:	libqplc.a ver.o
#	$(LD) $(LDFLAGS) ver.o $(OBJS3) -lqplc $(LIBS) -o qplc-4
#	size qplc-4
qplc:	libqplc.a ver.o
	$(LD) $(LDFLAGS) ver.o $(OBJS3) -lqplc $(LIBS) -o qplc
	if [ '$(RELEASE)' = 1 ]; then strip -g -x qplc; fi
	size qplc


qplc-3:	libqplc.a ver-3.o
	$(LD) $(LDFLAGS_3) ver-3.o $(OBJS3) -lqplc $(LIBS) -o qplc-3
	if [ '$(RELEASE)' = 1 ]; then strip -g -x qplc-3; fi
	size qplc-3

map::
	$(LD) $(LDFLAGS_MAP) ver.o $(OBJS3) -lqplc $(LIBS) -o qplc-4

#MY_SOURCES=dm_sample.c
MY_OBJS=/u/beppe/ilc/src/test/user.o
#MY_OBJS=plc-objs/user.oo
#MY_OBJS=pezza.o plc-objs/hatsh.oo
#MY_OBJS=dm_sample.o plc-objs/hatsh.oo
my_qplc:	$(MY_OBJS)
	$(LD) $(LDFLAGS) $(MY_OBJS) -lqplc $(LIBS) -o my_qplc

qplc.o:	$(OBJS)
	$(LD_R) $(LDRFLAGS) $(OBJS) -o qplc.o
	size qplc.o

libqplc.a:	qplc.o $(OBJS2)
	if [ '$(RELEASE)' = 1 ]; then strip -g -x qplc.o $(OBJS2); fi
	rm -f libqplc.a
	$(AR) $(ARFLAGS) libqplc.a qplc.o $(OBJS2)
	$(RANLIB) libqplc.a

main.o:	main.c $(HEADERS)
util.o:	util.c util.h $(HEADERS)
util2.o:	util2.s
modules.o:	modules.c $(HEADERS)
dynaload.o:	dynaload.c $(HEADERS)
dummy_prog480.o:	dummy_prog480.c plcapi.h
dummy_hatsh.o:	dummy_hatsh.c
plc480.o:	plc480.c $(HEADERS) plcapi.h
debug.o:	debug.c $(HEADERS)
compat.o:	compat.c $(HEADERS)
drivers.o:	drivers.c $(HEADERS)
dr_ios.o:	dr_ios.c $(HEADERS)
dr_ax.o:	dr_ax.c $(HEADERS)
dr_keyb.o:	dr_keyb.c $(HEADERS)
dr_ser.o:	dr_ser.c $(HEADERS)
dr_bgage.o:	dr_bgage.c $(HEADERS)
shvar.o:	shvar.c $(HEADERS)
exec.o:	exec.c $(HEADERS)
superv.o:	superv.c $(HEADERS)
ilcrtm.o:	ilcrtm.c ilcrtm.h $(HEADERS) plcapi.h
sysv.o:	sysv.c glue.h
posix.o:	posix.c glue.h
glue.o:	glue.c glue.h
debugger.o:	debugger.c $(HEADERS)
debhook.o:	debhook.s
lista-LynxOS.o:	lista-LynxOS.s
dummy_serverdm.o:	dummy_serverdm.s
remote.o:	remote.c $(HEADERS)
ioconf.o:	ioconf.c $(HEADERS) hsort.h
hsort.o:	hsort.c hsort.h

asend.o:	asend.c asend.h

plc480mix.o:	plc480mix.c $(HEADERS) plcapi.h

ver.o:	ver.c
ver.c:	VERSIONE
	@ \
	versione=`cat VERSIONE`; \
	echo -en 'char Versione[] = "@(#) '"$$versione" > ver.c; \
	echo -en '\\t\\t[' >> ver.c; \
	echo -en "`date +"%d/%m/%Y %H:%M:%S"`" >> ver.c; \
	echo -en ']\\tlib:' >> ver.c; \
	awk '/^vers/{print $$3 "\";"; }' $(VERLIB) >> ver.c

ver-3.o:	ver-3.c
ver-3.c:	VERSIONE
	@ \
	versione=`cat VERSIONE`; \
	echo -en 'char Versione[] = "@(#) '"$$versione" > ver-3.c; \
	echo -en '\\t\\t[' >> ver-3.c; \
	echo -en "`date +"%d/%m/%Y %H:%M:%S"`" >> ver-3.c; \
	echo -en ']\\tlib:' >> ver-3.c; \
	awk '/^vers/{print $$3 "\";"; }' $(VERLIB_3) >> ver-3.c

ver_core.o:	ver_core.c
ver_core.c:	VERSIONE
	@ \
	versione=`cat VERSIONE`; \
	echo -en 'char Versione[] = "@(#) '"$$versione" > ver_core.c; \
	echo -en '\\t\\t[' >> ver_core.c; \
	echo -en "`date +"%d/%m/%Y %H:%M:%S"`" >> ver_core.c; \
	echo -en ']\\tlib:?.?.?   ";\n' >> ver_core.c; \

VERSIONE:	$(SOURCES) $(HEADERS) Makefile 
	@if [ -r VERSIONE ]; then \
		versione=`awk '{ split($$0,a,"."); print a[1] "." a[2] "." a[3] "." (a[4]+1); }' VERSIONE` ;\
	else \
		versione=1.0.0.0; \
	fi; \
	echo 'Numero di versione proposto per QPLC : '"$$versione"; \
	echo 'Premi ENTER se va bene, oppure scrivine uno tu.'; \
	read a; \
	if [ "$$a" ]; then versione="$$a"; fi; \
	echo "$$versione" > VERSIONE;

tags:	$(SOURCES)
	ctags $(SOURCES)

